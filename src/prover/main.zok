import "hashes/sha256/512bitPacked" as sha256packed
import "utils/casts/u32_to_field" as u32_to_field

def main(private u32[100] a, private u32[100] c, private u32 b) -> field[2]:



  u32 res = 0
  u32[100] amounts = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,10]

  for u32 x in 0..100 do
    u32 factor = if c[x] != 0 then c[x] else 0 fi
    factor = if factor == 0 then a[x] else factor fi
    res = res + amounts[x] * factor
  endfor
  assert(b==res)
  u32 result = res
  field[2] h = sha256packed([0, 0, 0, u32_to_field(result)])

  return h